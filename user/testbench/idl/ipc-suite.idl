/* interface for a helper used by ipc_suite.c . */

#include "l4x2.idl"
#include "common.idl"


[StubPrefix(__ipchelper)]
interface IpcHelper: L4X2::FaultHandler, Quittable
{
	/* causes the helper thread to get another scheduling quantum before
	 * returning to play.
	 */
	[Label(0x1233)]
	void yield();

	/* @sleep_after_us provokes the case where send-phase preemption sets a
	 * timeout which is reset on r_recv -> recv_wait.
	 *
	 * also sets the fault handler's response delay to @us.
	 */
	[Label(0x1234), StubSendTimeout, StubRecvTimeout]
	void sleep(
		in long us,			/* Âµs of sleep */
		in boolean spin,	/* false = IPC sleep, true = spinning */
		in long sleep_after_us);	/* length of IPC sleep after */


	typedef string<12 * 1024> munge_str;

	/* xfer timeout test function. receives a string, and munges it with a
	 * random_string() output generated with @rnd_seed ^ hash_string(@input).
	 * (hash_string() is from ccan/hash.) replies with the munged string.
	 */
	[Label(0x1235)]
	void munge_string(
		in munge_str input,
		out munge_str output,
		in long rnd_seed);

	/* redirection test function. returns the input value like it was
	 * provided, and the tag/sender/actualsender values.
	 */
	[Label(0x1236), StubRecvTimeout]
	long ipc_ping(
		in long echo_value,
		out L4X2::word tag,
		out L4X2::word sender,
		out L4X2::word actualsender);
};
