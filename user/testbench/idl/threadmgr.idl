
#include <muidl.idl>
#include "l4x2.idl"


[StubPrefix(__tmgr), IfaceLabel(0x8ac3)]
interface ThreadMgr: L4X2::ExceptionHandler, L4X2::PreemptHandler
{
	void add_thread(in L4X2::ThreadId new_tid);

	/* used for kill_thread(). */
	void remove_thread(in L4X2::ThreadId dead_tid);

	void exit_thread(in L4X2::word result)
		raises(muidl::NoReply);

	/* exit_status is -1 when @join_tid doesn't exist, 0 for regular exit, and
	 * 1 for segv.
	 */
	[StubRecvTimeout]
	void join_thread(
		in L4X2::ThreadId join_tid,
		[MR(1)] out long exit_status,
		[MR(2)] out L4X2::word result)
			raises(muidl::NoReply);

	/* forkserv's interface, informing the client about sum ting wong. */
	[StubSendTimeout]
	oneway void segv(in L4X2::ThreadId dead_tid, in L4X2::word fault_addr);

	/* for pumping per-thread preÃ«mpt fault & exception data one entry at a
	 * time. returns false when no more records were available.
	 */
	boolean get_preempt_record(
		in L4X2::ThreadId thread,
		out L4X2::word clock_hi,
		out L4X2::word clock_lo,
		out boolean was_exception);
};
